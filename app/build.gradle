apply plugin: 'com.android.application'
apply plugin: 'kotlin-platform-android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

// App version
def versionMajor = 0
def versionMinor = 3
def versionUpdate = 3
def versionPatch = 2

// App build params
def compileSdkProjectVersion = 28
def minSdkProjectVersion = 21

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:0.26.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:0.26.0'

    // Google Android basic libraries
    implementation "com.android.support:appcompat-v7:28.0.0"
    implementation "com.android.support:support-v4:28.0.0"
    implementation "com.android.support:design:28.0.0"

    // Architecture components
    implementation "android.arch.lifecycle:extensions:1.1.1"
    implementation "android.arch.persistence.room:runtime:1.1.1"
    kapt "android.arch.persistence.room:compiler:1.1.1"

    // Dagger
    implementation "com.google.dagger:dagger:2.17"
    implementation "com.google.dagger:dagger-android:2.17"
    implementation "com.google.dagger:dagger-android-support:2.17"
    kapt "com.google.dagger:dagger-compiler:2.17"
    kapt "com.google.dagger:dagger-android-processor:2.17"

    // AppMetrica
    implementation 'com.yandex.android:mobmetricalib:3.2.2'
    implementation 'com.android.installreferrer:installreferrer:1.0'

    //TODO: Закончить подключение AppMetricaPush
//    // AppMetricaPush
//    implementation "com.yandex.android:mobmetricapushlib:1.2.0"
//    implementation "com.google.firebase:firebase-messaging:17.3.3"
//    implementation "com.google.android.gms:play-services-base:16.0.1"
//    implementation "com.android.support:support-compat:28.0.0"

    implementation "com.crashlytics.sdk.android:crashlytics:2.9.5"

    // Timber
    implementation "com.jakewharton.timber:timber:4.7.1"

    // Fresco
    implementation "com.github.bumptech.glide:glide:4.8.0"
    kapt "com.github.bumptech.glide:compiler:4.8.0"

//    testImplementation "junit:junit:$junitVersion"
//    testImplementation "org.mockito:mockito-core:$mockitoVersion"
//    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espressoVersion"
//    androidTestImplementation 'com.android.support.test:runner:1.0.2'
//    androidTestImplementation 'com.android.support.test:rules:1.0.2'
//    androidTestImplementation "org.mockito:mockito-android:$mockitoVersion"
}

android {
    compileSdkVersion compileSdkProjectVersion
    buildToolsVersion '28.0.3'

    if (project.hasProperty('devBuild')) {
        splits.abi.enable = false
        splits.density.enable = false
        aaptOptions.cruncherEnabled = false
    }

    defaultConfig {
        applicationId "com.sudox.android"
        minSdkVersion minSdkProjectVersion
        targetSdkVersion compileSdkProjectVersion
        versionCode versionMajor * 1000 + versionMinor * 100 + versionUpdate * 10 + versionPatch
        versionName "${versionMajor}.${versionMinor}.${versionUpdate}.${versionPatch}"
        multiDexEnabled false

        // Runner for instrumental tests
//        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    mapDiagnosticLocations true
    useBuildCache true
    generateStubs true
}

kotlin {
    experimental {
        coroutines "enable"
    }
}