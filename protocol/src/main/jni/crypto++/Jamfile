
fost-lib crypto++
    :
        # This file list is taken from the library sources in the make file
        cryptlib.cpp
        cpu.cpp
        integer.cpp
        3way.cpp
        adler32.cpp
        algebra.cpp
        algparam.cpp
        arc4.cpp
        aria-simd.cpp
        aria.cpp
        ariatab.cpp
        asn.cpp
        authenc.cpp
        base32.cpp
        base64.cpp
        basecode.cpp
        bfinit.cpp
        blake2-simd.cpp
        blake2.cpp
        blowfish.cpp
        blumshub.cpp
        camellia.cpp
        cast.cpp
        casts.cpp
        cbcmac.cpp
        ccm.cpp
        chacha.cpp
        channels.cpp
        cmac.cpp
        crc-simd.cpp
        crc.cpp
        default.cpp
        des.cpp
        dessp.cpp
        dh.cpp
        dh2.cpp
        dll.cpp
        dsa.cpp
        eax.cpp
        ec2n.cpp
        eccrypto.cpp
        ecp.cpp
        elgamal.cpp
        emsa2.cpp
        eprecomp.cpp
        esign.cpp
        files.cpp
        filters.cpp
        fips140.cpp
        fipstest.cpp
        gcm-simd.cpp
        gcm.cpp
        gf256.cpp
        gf2_32.cpp
        gf2n.cpp
        gfpcrypt.cpp
        gost.cpp
        gzip.cpp
        hex.cpp
        hmac.cpp
        hrtimer.cpp
        ida.cpp
        idea.cpp
        iterhash.cpp
        kalyna.cpp
        kalynatab.cpp
        keccak.cpp
        luc.cpp
        mars.cpp
        marss.cpp
        md2.cpp
        md4.cpp
        md5.cpp
        misc.cpp
        modes.cpp
        mqueue.cpp
        mqv.cpp
        nbtheory.cpp
        neon-simd.cpp
        network.cpp
        oaep.cpp
        # No idea where this file is meant to come from
        # ospstore.cpp
        osrng.cpp
        panama.cpp
        pkcspad.cpp
        poly1305.cpp
        polynomi.cpp
        pssr.cpp
        pubkey.cpp
        queue.cpp
        rabin.cpp
        randpool.cpp
        rc2.cpp
        rc5.cpp
        rc6.cpp
        rdrand.cpp
        rdtables.cpp
        rijndael.cpp
        ripemd.cpp
        rng.cpp
        rsa.cpp
        rw.cpp
        safer.cpp
        salsa.cpp
        seal.cpp
        seed.cpp
        serpent.cpp
        sha-simd.cpp
        sha.cpp
        sha3.cpp
        shacal2-simd.cpp
        shacal2.cpp
        shark.cpp
        sharkbox.cpp
        skipjack.cpp
        socketft.cpp
        sosemanuk.cpp
        square.cpp
        squaretb.cpp
        strciphr.cpp
        tea.cpp
        tftables.cpp
        threefish.cpp
        tiger.cpp
        tigertab.cpp
        trdlocal.cpp
        ttmac.cpp
        twofish.cpp
        vmac.cpp
        wait.cpp
        wake.cpp
        whrlpool.cpp
        xtr.cpp
        xtrcrypt.cpp
        zdeflate.cpp
        zinflate.cpp
        zlib.cpp
    :
        #i586 only
        <source>sse-simd.cpp
        # AESNI or ARMv7a/ARMv8a available
        <source>rijndael-simd.cpp

        <target-os>windows:<define>CRYPTOPP_EXPORTS
        <target-os>windows:<define>CRYPTOPP_ENABLE_NAMESPACE_WEAK=1

        <toolset>clang:<cxxflags>-maes
        <toolset>clang:<cxxflags>-mpclmul
        <toolset>clang:<cxxflags>-msha
        <toolset>clang:<cxxflags>-msse4.1
        <toolset>clang:<cxxflags>-msse4.2
        <toolset>clang:<cxxflags>-mssse3
        <toolset>clang:<cxxflags>-Wno-unused-const-variable
        <toolset>clang:<cxxflags>-Wno-unused-private-field

        <toolset>gcc:<cxxflags>-maes
        <toolset>gcc:<cxxflags>-mpclmul
        <toolset>gcc:<cxxflags>-msha
        <toolset>gcc:<cxxflags>-msse4.1
        <toolset>gcc:<cxxflags>-msse4.2
        <toolset>gcc:<cxxflags>-mssse3
        <toolset>gcc:<cxxflags>-Wno-unknown-pragmas

        <toolset>msvc:<cxxflags>/Oi
    ;

